#include <stdio.h>
#include <stdlib.h>

// 사각형을 나타내는 구조체 정의
typedef struct Rectangle {
    int width;
    int height;
} Rectangle;

// 비교 함수 정의 (내림차순 정렬을 위해)
int compare(const void *a, const void *b) {
    const Rectangle *rectA = (const Rectangle *)a;
    const Rectangle *rectB = (const Rectangle *)b;

    // 면적을 비교하여 내림차순으로 정렬
    int areaA = rectA->width * rectA->height;
    int areaB = rectB->width * rectB->height;

    return areaB - areaA;
}

int main() {
    int n = 0; // 사각형의 개수
    Rectangle *rectangles = NULL;

    // 동적 메모리 할당
    rectangles = (Rectangle *)malloc(100 * sizeof(Rectangle));
    if (rectangles == NULL) {
        perror("메모리 할당 실패");
        return 1;
    }

    // 가로 세로 입력 받기
    while (scanf("%d %d", &rectangles[n].width, &rectangles[n].height) == 2) {
        n++;
    }

    // 내림차순으로 정렬
    qsort(rectangles, n, sizeof(Rectangle), compare);

    // 정렬된 결과 출력
    for (int i = 0; i < n; i++) {
        printf("%d %d\n", rectangles[i].width, rectangles[i].height);
    }

    // 메모리 해제
    free(rectangles);

    return 0;
}

